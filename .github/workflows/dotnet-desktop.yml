name: Build and Publish

on:
  push:
    tags:
      - '*'  # Trigger only when a tag is pushed
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required for creating releases

jobs:
  deploy:
    if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref, 'refs/heads/release')
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Ensure all tags are fetched

    - name: Get Tag Name
      id: get_tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Ensure on Release Branch
      run: |
        CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
        if [ "$CURRENT_BRANCH" != "release" ]; then
          echo "Not on release branch. Aborting deployment."
          exit 1
        fi

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore ./PasswordTyper

    - name: Build
      run: dotnet build ./PasswordTyper --configuration Release

    - name: Publish
      run: dotnet publish ./PasswordTyper --configuration Release --output ./publish /p:PublishProfile=Properties/PublishProfiles/FolderProfile.pubxml

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish
        asset_name: publish.zip
        asset_content_type: application/zip
